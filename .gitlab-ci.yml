# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- test
variables:
  MESON_ARGS: "--fatal-meson-warnings"
  MESON_ARGS_WINDOWS: "${MESON_ARGS} --force-fallback-for=zlib"
".build windows common":
  image: registry.freedesktop.org/gstreamer/gst-ci/amd64/windows:v14-master
  stage: build
  tags:
  - docker
  - windows
  - '1809'
  - gstreamer-windows
".build linux common":
  image: registry.freedesktop.org/freetype/docker-images/debian:latest
  stage: build
".build windows meson":
  extends: ".build windows common"
  variables:
    ErrorActionPreference: Stop
    WarningPreference: Stop
  before_script:
  - pip3 install -U meson ninja
  script:
  - cmd.exe /C "C:\BuildTools\Common7\Tools\VsDevCmd.bat -host_arch=amd64 -arch=$env:ARCH
    && meson setup build $env:MESON_ARGS_WINDOWS && meson compile --verbose -C build
    && meson test -C build && meson test -C build --benchmark"
windows meson vs2017 amd64:
  extends: ".build windows meson"
  variables:
    ARCH: amd64
windows meson vs2017 x86:
  extends: ".build windows meson"
  variables:
    ARCH: x86
linux autotools:
  extends: ".build linux common"
  script: |
    ./autogen.sh
    ./configure --with-brotli=no \
                --with-bzip2=no \
                --with-harfbuzz=no \
                --with-png=no \
                --with-zlib=no

    make -j$(nproc) && make install
linux autotools libs:
  extends: ".build linux common"
  script: |
    ./autogen.sh
    ./configure --with-brotli=yes \
                --with-bzip2=yes \
                --with-harfbuzz=yes \
                --with-png=yes \
                --with-zlib=yes

    make -j$(nproc) && make install
linux meson:
  extends: ".build linux common"
  script: |
    meson setup build -Dbrotli=disabled \
                      -Dbzip2=disabled \
                      -Dharfbuzz=disabled \
                      -Dpng=disabled \
                      -Dzlib=disabled

    meson compile --verbose -C build
    meson install -C build
linux meson libs:
  extends: ".build linux common"
  script: |
    meson setup build -Dbrotli=enabled \
                      -Dbzip2=enabled \
                      -Dharfbuzz=disabled \
                      -Dpng=disabled \
                      -Dzlib=disabled

    meson compile --verbose -C build
    meson install -C build
linux cmake:
  extends: ".build linux common"
  script: |
    cmake -B build -D FT_DISABLE_BROTLI=TRUE \
                   -D FT_DISABLE_BZIP2=TRUE \
                   -D FT_DISABLE_HARFBUZZ=TRUE \
                   -D FT_DISABLE_PNG=TRUE \
                   -D FT_DISABLE_ZLIB=TRUE

    cmake --build build --target install
linux cmake libs:
  extends: ".build linux common"
  script: |
    cmake -B build -D FT_REQUIRE_BROTLI=TRUE \
                   -D FT_REQUIRE_BZIP2=TRUE \
                   -D FT_REQUIRE_HARFBUZZ=TRUE \
                   -D FT_REQUIRE_PNG=TRUE \
                   -D FT_REQUIRE_ZLIB=TRUE

    cmake --build build --target install
sast:
  stage: test
  before_script:
  - apk add --no-cache python3 py3-pip
  - apk add recode gnu-libiconv
  - cd builds/amiga
  - 'find $(pwd) -type f -exec recode -x: l1..utf8 {} \;'
include:
- template: Security/SAST.gitlab-ci.yml
variables:
  SAST_EXCLUDED_ANALYZERS: "eslint"